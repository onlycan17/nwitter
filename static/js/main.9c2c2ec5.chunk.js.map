{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["authService","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","signIn","signInWithEmailAndPassword","createUser","createUserWithEmailAndPassword","onAuthStateChanged1","onAuthStateChanged","googleAuth","GoogleAuthProvider","githubAuth","GithubAuthProvider","signPopup","signInWithPopup","signOutEx","signOut","dbService","getFirestore","nowDate","serverTimestamp","addDocEx","addDoc","collectionEx","collection","serverTimestampEx","getDocsEx","getDocs","onSnapShotEx","onSnapshot","docEx","doc","queryEx","query","orderbyEx","orderBy","deleteDocEx","deleteDoc","updateDocEx","updateDoc","storage","getStorage","refEx","ref","uploadStringEx","uploadString","getDownloadURLEx","getDownloadURL","whereEx","where","updateProfileEx","updateProfile","require","useState","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","data","console","log","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","deleteObject","attachmentUrl","toggleEditing","autoFocus","src","faTrash","faPencilAlt","NweetFactory","userObj","fileInput","useRef","nweet","setNweet","attachment","setAttachment","fileRef","uid","uuidv4","response","createdAt","creatorId","docRef","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","opacity","backgroundImage","current","faTimes","Home","nweets","setNweets","useEffect","q","snapshot","nweetArray","docs","map","marginTop","key","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","currentUser","push","Approuter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setUserObj","user","args","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mGAAA,8oCA6CaA,GADDC,YATW,CACnBC,OAAQC,0CACRC,WAAYD,gCACZE,UAAWF,gBACXG,cAAeH,4BACfI,kBAAmBJ,eACnBK,MAAOL,8CAIgBM,qBACdC,EAASC,6BACTC,EAAaC,iCACbC,EAAsBC,qBACtBC,EAAaC,qBACbC,EAAaC,qBACbC,EAAYC,kBACZC,EAAYC,UACZC,EAAYC,IACZC,EAAUC,IACVC,EAAWC,IACXC,EAAeC,IACfC,EAAoBL,IACpBM,EAAYC,IACZC,EAAeC,IACfC,EAAQC,IACRC,EAAUC,IACVC,EAAYC,IACZC,EAAcC,IACdC,EAAcC,IACdC,EAAUC,cACVC,EAAQC,IACRC,EAAiBC,IACjBC,EAAmBC,IACnBC,EAAUC,IACVC,EAAkBC,iB,oLCrEvB1D,EAAgB2D,EAAQ,IAAxB3D,YACR,EAGI2D,EAAQ,IAFV9C,EADF,EACEA,+BACAF,EAFF,EAEEA,2BAEMiD,EAAaD,EAAQ,GAArBC,SA2EOC,EAvEE,WACf,MAA0BD,EAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAgCH,EAAS,IAAzC,mBAAOI,EAAP,KAAiBC,EAAjB,KACA,EAAoCL,EAAS,IAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KACA,EAA0BP,EAAS,IAAnC,mBAAOQ,EAAP,KAAcC,EAAd,KAEMC,EAAW,SAACC,GAChB,MAEIA,EADFC,OAAUC,EADZ,EACYA,KAAMC,EADlB,EACkBA,MAGL,UAATD,EACFV,EAASW,GACS,aAATD,GACTR,EAAYS,IAGVC,EAAQ,uCAAG,WAAOJ,GAAP,eAAAK,EAAA,yDACfL,EAAMM,iBADS,UAITX,EAJS,gCAKErD,EACXb,EACA8D,EACAE,GARS,OAKXc,EALW,+CAWEnE,EAA2BmD,EAAOE,GAXpC,QAWXc,EAXW,eAabC,QAAQC,IAAIF,GAbC,kDAebT,EAAS,KAAMY,SAfF,0DAAH,sDAmBd,OACE,oCACE,0BAAMN,SAAUA,EAAUO,UAAU,aAClC,2BACET,KAAK,QACLU,KAAK,QACLC,YAAY,QACZC,UAAQ,EACRX,MAAOZ,EACPQ,SAAUA,EACVY,UAAU,cAEZ,2BACET,KAAK,WACLU,KAAK,WACLC,YAAY,WACZC,UAAQ,EACRX,MAAOV,EACPkB,UAAU,YACVZ,SAAUA,IAEZ,2BACEa,KAAK,SACLD,UAAU,uBACVR,MAAOR,EAAa,gBAAkB,YAEvCE,GAAS,0BAAMc,UAAU,aAAad,IAEzC,0BAAMkB,QA7BY,kBAAMnB,GAAc,SAACoB,GAAD,OAAWA,MA6BnBL,UAAU,cACrChB,EAAa,UAAY,oB,wBCzBnBsB,EAnCF,WACX,IAAMC,EAAa,uCAAG,WAAOlB,GAAP,iBAAAK,EAAA,4DAKP,YAHDH,EACRF,EADFC,OAAUC,MAIViB,EAAW,IAAI1E,aACG,WAATyD,IACTiB,EAAW,IAAIxE,cARG,SAUdE,oBAAUpB,cAAa0F,GAVT,2CAAH,sDAYnB,OACE,yBAAKR,UAAU,iBACb,kBAAC,IAAD,CACES,KAAMC,IACNC,MAAO,UACPC,KAAK,KACLC,MAAO,CAACC,aAAa,MAEvB,kBAAC,EAAD,MACA,yBAAKd,UAAU,YACb,4BAAQI,QAASG,EAAehB,KAAK,SAASS,UAAU,WAAxD,uBAEE,kBAAC,IAAD,CAAiBS,KAAMM,OAEzB,4BAAQX,QAASG,EAAehB,KAAM,SAAUS,UAAU,WAA1D,uBAEE,kBAAC,IAAD,CAAiBS,KAAMO,U,wBCwClBC,EAvED,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,QACzB,EAA8BzC,oBAAS,GAAvC,mBAAO0C,EAAP,KAAgBC,EAAhB,KACA,EAAgC3C,mBAASwC,EAASI,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAa,uCAAG,sBAAA/B,EAAA,0DACTgC,OAAOC,QAAQ,+CADN,gCAGZlE,sBAAYN,gBAAMb,sBAAa,SAAU4E,EAASU,KAHtC,uBAIZC,YAAa9D,gBAAMF,UAASqD,EAASY,gBAJzB,2CAAH,qDAObC,EAAgB,WACpBV,GAAW,SAAChB,GAAD,OAAWA,MAElBZ,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,6DACfL,EAAMM,iBADS,SAEThC,sBACJR,gBAAMb,sBAAa,SAAU4E,EAASU,IACtC,OACAL,GALa,OAOfF,GAAW,GAPI,2CAAH,sDAgBd,OACE,yBAAKrB,UAAU,SACZoB,EACC,oCACE,0BAAM3B,SAAUA,EAAUO,UAAU,uBAClC,2BACEC,KAAK,OACLC,YAAY,kBACZV,MAAO+B,EACPpB,UAAQ,EACR6B,WAAS,EACT5C,SAlBK,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZgC,EAAYhC,IAeFQ,UAAU,cAEZ,2BAAOC,KAAK,SAAST,MAAM,eAAeQ,UAAU,aAEtD,0BAAMI,QAAS2B,EAAe/B,UAAU,qBAAxC,WAKF,oCACE,4BAAKkB,EAASI,MACbJ,EAASY,eACR,yBAAKG,IAAKf,EAASY,gBAEpBX,GACC,yBAAKnB,UAAU,kBACX,0BAAMI,QAASqB,GACX,kBAAC,IAAD,CAAiBhB,KAAMyB,OAE3B,0BAAM9B,QAAS2B,GACX,kBAAC,IAAD,CAAiBtB,KAAM0B,W,QCkD5BC,EA7GM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAChBC,EAAYC,mBAClB,EAA0B7D,mBAAS,IAAnC,mBAAO8D,EAAP,KAAcC,EAAd,KACA,EAAoC/D,mBAAS,IAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KAEMlD,EAAQ,uCAAG,WAAOJ,GAAP,uBAAAK,EAAA,yDACD,KAAV8C,EADW,oDAIfnD,EAAMM,iBACFmC,EAAgB,GACD,KAAfY,EANW,wBAOPE,EAAU7E,gBAAMF,UAAD,UAAawE,EAAQQ,IAArB,YAA4BC,gBAPpC,SAQU7E,yBAAe2E,EAASF,EAAY,YAR9C,cAQPK,EARO,iBASS5E,2BAAiB4E,EAAS/E,KATnC,QASb8D,EATa,OAUbjC,QAAQC,IAAIiD,GAVC,eAaT7B,EAAW,CACfI,KAAMkB,EACNQ,UAAWlG,8BACXmG,UAAWZ,EAAQQ,IACnBf,iBAjBa,oBAqBQpF,mBACnBE,uBAAaN,sBAAa,UAC1B4E,GAvBW,QAqBPgC,EArBO,OAyBbrD,QAAQC,IAAI,6BAA8BoD,EAAOtB,IAzBpC,mDA2Bb/B,QAAQX,MAAM,0BAAd,MA3Ba,QA8BfuD,EAAS,IACTE,EAAc,IA/BC,2DAAH,sDA4Dd,OACE,0BAAMlD,SAAUA,EAAUO,UAAU,eAClC,yBAAKA,UAAU,0BACb,2BACEA,UAAU,qBACVR,MAAOgD,EACPpD,SAhCS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZiD,EAASjD,IA6BHS,KAAK,OACLC,YAAY,uBACZiD,UAAW,MAQb,2BAAOlD,KAAK,SAAST,MAAM,SAASQ,UAAU,yBAEhD,2BAAOoD,QAAQ,cAAcpD,UAAU,sBACrC,4CACA,kBAAC,IAAD,CAAiBS,KAAM4C,OAEzB,2BACEzB,GAAG,cACH3B,KAAK,OACLqD,OAAO,UACPlE,SA/Ce,SAACC,GACpB,IAGMkE,EADFlE,EADFC,OAAUkE,MAEU,GAChBC,EAAS,IAAIC,WACnBD,EAAOE,UAAY,SAACC,GAClB/D,QAAQC,IAAI8D,GACZ,IACmBC,EACfD,EADFE,cAAiBD,OAEnBlB,EAAckB,IAEhBJ,EAAOM,cAAcR,IAmCjB1C,MAAO,CACHmD,QAAS,KAEdtB,GACC,yBAAK1C,UAAU,2BACb,yBAAKiC,IAAKS,EAAY7B,MAAO,CAACoD,gBAAgBvB,KAC9C,yBAAK1C,UAAU,qBAAqBI,QAvClB,WACxBuC,EAAc,IACdL,EAAU4B,QAAQ1E,MAAQ,OAsChB,wCACA,kBAAC,IAAD,CAAiBiB,KAAM0D,UCnEtBC,EApCF,SAAC,GAAiB,IAAf/B,EAAc,EAAdA,QACd,EAA4B3D,mBAAS,IAArC,mBAAO2F,EAAP,KAAeC,EAAf,KAoBA,OAlBAC,qBAAU,WACR,IAAMC,EAAInH,kBACRT,uBAAaN,sBAAa,UAC1BiB,oBAAU,YAAa,SAEzBN,uBAAauH,GAAG,SAACC,GACf,IAAMC,EAAaD,EAASE,KAAKC,KAAI,SAACxH,GAGpC,OAFAyC,QAAQC,IAAI,8BACZD,QAAQC,IAAI1C,EAAIwC,QACT,aACLgC,GAAIxE,EAAIwE,IACLxE,EAAIwC,WAGX0E,EAAUI,QAEX,IAGD,yBAAK1E,UAAU,aACb,kBAAC,EAAD,CAAcqC,QAASA,IACvB,yBAAKxB,MAAO,CAACgE,UAAU,KACpBR,EAAOO,KAAI,SAACpC,GAAD,OACV,kBAAC,EAAD,CACEsC,IAAKtC,EAAMZ,GACXV,SAAUsB,EACVrB,QAASqB,EAAMS,YAAcZ,EAAQQ,YCHlCkC,EAjCI,SAAC,GAAD,IAAG1C,EAAH,EAAGA,QAAH,OACjB,6BACE,wBAAIxB,MAAO,CAAEmE,QAAS,OAAQC,eAAgB,SAAUJ,UAAW,KACjE,4BACE,kBAAC,IAAD,CAAMK,GAAG,IAAIrE,MAAO,CAAEsE,YAAa,KACjC,kBAAC,IAAD,CAAiB1E,KAAMC,IAAWC,MAAO,UAAWC,KAAK,SAG7D,4BACE,kBAAC,IAAD,CACEsE,GAAG,WACHrE,MAAO,CACLuE,WAAY,GACZJ,QAAS,OACTK,cAAe,SACfC,WAAY,SACZC,SAAU,KAGZ,kBAAC,IAAD,CAAiB9E,KAAM+E,IAAQ7E,MAAO,UAAWC,KAAK,OACtD,0BAAMC,MAAO,CAAEgE,UAAW,KAEtBxC,EAAQoD,YAAR,UACKpD,EAAQoD,YADb,kBAEE,gBC1BD,cAA+B,IAA5BC,EAA2B,EAA3BA,YAAarD,EAAc,EAAdA,QACvBsD,EAAUC,cAChB,EAA4ClH,mBAAS2D,EAAQoD,aAA7D,mBAAOI,EAAP,KAAuBC,EAAvB,KAWMrG,EAAQ,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDACfL,EAAMM,iBACF0C,EAAQoD,cAAgBI,EAFb,gCAGPtH,0BAAgBzD,cAAYiL,YAAa,CAC7CN,YAAaI,IAJF,OAOfH,IAPe,2CAAH,sDA0Bd,OACE,yBAAK1F,UAAU,aACb,0BAAMP,SAAUA,EAAUO,UAAU,eAClC,2BACEZ,SApCS,SAACC,GAChB,IACYG,EACRH,EADFC,OAAUE,MAEZsG,EAAkBtG,IAiCZS,KAAK,OACL+B,WAAS,EACT9B,YAAY,eACZV,MAAOqG,EACP7F,UAAU,cAEZ,2BACEC,KAAK,SACLT,MAAM,iBACNQ,UAAU,UACVa,MAAO,CACLgE,UAAW,OAIjB,0BAAM7E,UAAU,2BAA2BI,QAxDzB,WACpBhE,oBAAUtB,eACV6K,EAAQK,KAAK,OAsDX,aCpBSC,EApCG,SAAC,GAAyC,IAAvCP,EAAsC,EAAtCA,YAAaQ,EAAyB,EAAzBA,WAAY7D,EAAa,EAAbA,QAC1C,OACI,kBAAC,IAAD,KACK6D,GAAc,kBAAC,EAAD,CAAY7D,QAASA,IACpC,kBAAC,IAAD,KACK6D,EACG,yBACIrF,MAAO,CACHsF,SAAS,IACTC,MAAO,OACPC,OAAQ,SACRxB,UAAW,GACXG,QAAS,OACTC,eAAgB,WAGpB,kBAAC,IAAD,CAAOqB,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,CAAMlE,QAASA,KAEnB,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,YACd,kBAACC,EAAD,CAASd,YAAaA,EAAarD,QAASA,MAIpD,oCACI,kBAAC,IAAD,CAAOiE,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,WCiBbE,MA9Cf,WACE,MAAwB/H,oBAAS,GAAjC,mBAAOgI,EAAP,KAAaC,EAAb,KACA,EAA8BjI,mBAAS,MAAvC,mBAAO2D,EAAP,KAAgBuE,EAAhB,KA6BA,OA5BArC,qBAAU,WACR3I,8BAAoBd,eAAa,SAAC+L,GAE9BD,EADEC,EACS,CACTpB,YAAaoB,EAAKpB,YAClB5C,IAAKgE,EAAKhE,IACVrE,cAAe,SAACsI,GAAD,OACbvI,0BAAgBsI,EAAM,CACpBpB,YAAaoB,EAAKpB,gBAIX,MAEfkB,GAAQ,QAET,IAaD,oCACGD,EACC,kBAAC,EAAD,CACEhB,YAfY,WAClB,IAAMmB,EAAO/L,cAAYiL,YACzBa,EAAW,CACTnB,YAAaoB,EAAKpB,YAClB5C,IAAKgE,EAAKhE,IACVtE,gBAAiB,SAACuI,GAAD,OACfvI,0BAAgBsI,EAAM,CACpBpB,YAAaoB,EAAKpB,kBASlBS,WAAYa,QAAQ1E,GACpBA,QAASA,IAGX,oB,MCvCR2E,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9c2c2ec5.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\nimport {\n    getAuth,\n    signInWithEmailAndPassword,\n    createUserWithEmailAndPassword,\n    onAuthStateChanged,\n    GoogleAuthProvider,\n    GithubAuthProvider,\n    signInWithPopup,\n    signOut,\n    updateProfile\n} from \"firebase/auth\";\nimport {\n    getFirestore,\n    addDoc,\n    collection,\n    serverTimestamp,\n    getDocs,\n    onSnapshot,\n    doc,\n    query,\n    orderBy,\n    deleteDoc,\n    updateDoc,\n    where\n} from \"firebase/firestore\";\nimport { \n    getDownloadURL, \n    getStorage, \n    ref, \n    uploadString  } from \"firebase/storage\";\n\n\n//import firestore from \"firebase.firestore\";\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nconst app = initializeApp(firebaseConfig);\nexport const authService = getAuth();\nexport const signIn = signInWithEmailAndPassword;\nexport const createUser = createUserWithEmailAndPassword;\nexport const onAuthStateChanged1 = onAuthStateChanged;\nexport const googleAuth = GoogleAuthProvider;\nexport const githubAuth = GithubAuthProvider;\nexport const signPopup = signInWithPopup;\nexport const signOutEx = signOut;\nexport const dbService = getFirestore;\nexport const nowDate = serverTimestamp;\nexport const addDocEx = addDoc;\nexport const collectionEx = collection;\nexport const serverTimestampEx = serverTimestamp;\nexport const getDocsEx = getDocs;\nexport const onSnapShotEx = onSnapshot;\nexport const docEx = doc;\nexport const queryEx = query;\nexport const orderbyEx = orderBy;\nexport const deleteDocEx = deleteDoc;\nexport const updateDocEx = updateDoc;\nexport const storage = getStorage();\nexport const refEx = ref;\nexport const uploadStringEx = uploadString;\nexport const getDownloadURLEx = getDownloadURL;\nexport const whereEx = where;\nexport const updateProfileEx = updateProfile;","import React from \"react\";\nconst { authService } = require(\"fbase\");\nconst {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} = require(\"firebase/auth\");\nconst { useState } = require(\"react\");\n\nconst inputStyles = {};\n\nconst AuthForm = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [newAccount, setNewAccount] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  const onChange = (event) => {\n    const {\n      target: { name, value },\n    } = event;\n\n    if (name === \"email\") {\n      setEmail(value);\n    } else if (name === \"password\") {\n      setPassword(value);\n    }\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      let data;\n      if (newAccount) {\n        data = await createUserWithEmailAndPassword(\n          authService,\n          email,\n          password\n        );\n      } else {\n        data = await signInWithEmailAndPassword(email, password);\n      }\n      console.log(data);\n    } catch (error) {\n      setError(error.message);\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"email\"\n          placeholder=\"Email\"\n          required\n          value={email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={password}\n          className=\"authInput\"\n          onChange={onChange}\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"CreateAccount\" : \"Sign In\"}\n        />\n        {error && <span className=\"authError\">{error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Sign In\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\n\nexport default AuthForm;\n","import React from \"react\";\nimport AuthForm from \"components/AuthForm\";\nimport {\n  authService,\n  githubAuth,\n  googleAuth,\n  signPopup,\n} from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n  } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Auth = () => {\n  const onSocialClick = async (event) => {\n    const {\n      target: { name },\n    } = event;\n    let provider;\n    if (name === \"google\") {\n      provider = new googleAuth();\n    } else if (name === \"github\") {\n      provider = new githubAuth();\n    }\n    await signPopup(authService, provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{marginBottom:30}}\n        />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google \n          <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name={\"github\"} className=\"authBtn\">\n          Continue with Github \n          <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { deleteObject } from \"firebase/storage\";\nimport React, { useState } from \"react\";\nimport {\n  dbService,\n  deleteDocEx,\n  docEx,\n  refEx,\n  storage,\n  updateDocEx,\n} from \"../fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      await deleteDocEx(docEx(dbService(), \"nweets\", nweetObj.id));\n      await deleteObject(refEx(storage, nweetObj.attachmentUrl));\n    }\n  };\n  const toggleEditing = () => {\n    setEditing((prev) => !prev);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    await updateDocEx(\n      docEx(dbService(), \"nweets\", nweetObj.id),\n      \"text\",\n      newNweet\n    );\n    setEditing(false);\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewNweet(value);\n  };\n\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your nweet\"\n              value={newNweet}\n              required\n              autoFocus\n              onChange={onChange}\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n              Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n                <span onClick={onDeleteClick}>\n                    <FontAwesomeIcon icon={faTrash} />\n                </span>\n                <span onClick={toggleEditing}>\n                    <FontAwesomeIcon icon={faPencilAlt} />\n                </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState, useRef } from \"react\";\nimport {\n  addDocEx,\n  collectionEx,\n  dbService,\n  getDownloadURLEx,\n  refEx,\n  serverTimestampEx,\n  storage,\n  uploadStringEx,\n} from \"../fbase\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\nconst NweetFactory = ({ userObj }) => {\n  const fileInput = useRef();\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n\n  const onSubmit = async (event) => {\n    if (nweet === \"\") {\n      return;\n    }\n    event.preventDefault();\n    let attachmentUrl = \"\";\n    if (attachment !== \"\") {\n      const fileRef = refEx(storage, `${userObj.uid}/${uuidv4()}`);\n      const response = await uploadStringEx(fileRef, attachment, \"data_url\");\n      attachmentUrl = await getDownloadURLEx(response.ref);\n      console.log(response);\n    }\n\n    const nweetObj = {\n      text: nweet,\n      createdAt: serverTimestampEx(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n\n    try {\n      const docRef = await addDocEx(\n        collectionEx(dbService(), \"nweets\"),\n        nweetObj\n      );\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNweet(value);\n  };\n  const onFileChange = (event) => {\n    const {\n      target: { files },\n    } = event;\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = (finishedEvent) => {\n      console.log(finishedEvent);\n      const {\n        currentTarget: { result },\n      } = finishedEvent;\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n  const onClearAttachment = () => {\n    setAttachment(\"\");\n    fileInput.current.value = null;\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"fatoryInput__container\">\n        <input\n          className=\"fatoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        {/* <input\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        ref={fileInput}\n    /> */}\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput_label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input \n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n            opacity: 0,\n        }}/>\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img src={attachment} style={{backgroundImage:attachment,}} />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n              <span>Remove</span>\n              <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import React, { useEffect, useState } from \"react\";\n\nimport {\n  collectionEx,\n  dbService,\n  onSnapShotEx,\n  orderbyEx,\n  queryEx,\n} from \"../fbase\";\n//import {uploadString} from \"firebase/storage\";\nimport Nweet from \"../components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  useEffect(() => {\n    const q = queryEx(\n      collectionEx(dbService(), \"nweets\"),\n      orderbyEx(\"createdAt\", \"desc\")\n    );\n    onSnapShotEx(q, (snapshot) => {\n      const nweetArray = snapshot.docs.map((doc) => {\n        console.log(\"...doc.data()-------------\");\n        console.log(doc.data());\n        return {\n          id: doc.id,\n          ...doc.data(),\n        };\n      });\n      setNweets(nweetArray);\n    });\n  }, []);\n  \n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{marginTop:30}}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {\n              userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"\n            }\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Navigation;\n","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { authService, signOutEx, updateProfileEx } from \"../fbase\";\n\nexport default ({ refreshUser, userObj }) => {\n  const history = useHistory();\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n  const onLogOutClick = () => {\n    signOutEx(authService);\n    history.push(\"/\");\n  };\n  const onChange = (event) => {\n    const {\n      target: { value },\n    } = event;\n    setNewDisplayName(value);\n  };\n  const onSubmit = async (event) => {\n    event.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfileEx(authService.currentUser, {\n        displayName: newDisplayName,\n      });\n    }\n    refreshUser();\n  };\n  //   const getMyNweets = async () => {\n  //       console.log('test');\n  //     const q = queryEx(\n  //       collectionEx(dbService(), \"nweets\"),\n  //       whereEx(\"creatorId\", \"==\", userObj.uid),\n  //       orderbyEx(\"createdAt\",'asc')\n  //     );\n  //     console.log(q);\n  //     const querySnapshot = await getDocsEx(q);\n  //     console.log(querySnapshot);\n  //     querySnapshot.forEach((doc) => {\n  //       console.log(doc.id, \"=>\", doc.data());\n  //     });\n  //   };\n  //   useEffect(() => {\n  //     getMyNweets();\n  //   }, []);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <input\n          onChange={onChange}\n          type=\"text\"\n          autoFocus\n          placeholder=\"Display name\"\n          value={newDisplayName}\n          className=\"formInput\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Update Profile\"\n          className=\"formBtn\"\n          style={{\n            marginTop: 10,\n          }}\n        />\n      </form>\n      <span className=\"formBtn cancelBtn logout\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n","import React from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Navigation from \"./Navigation\";\nimport Profile from \"../routes/Profile\";\n\nconst Approuter = ({ refreshUser, isLoggedIn, userObj}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth:890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }} \n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj}/>\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile refreshUser={refreshUser} userObj={userObj} />\n                        </Route>\n                    </div>\n                ) : (\n                    <>\n                        <Route exact path=\"/\">\n                            <Auth/>\n                        </Route>\n                    </>\n                )\n                }\n            </Switch>\n        </Router>\n    );\n}\n\nexport default Approuter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"./Router\";\nimport { authService, onAuthStateChanged1, updateProfileEx } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    onAuthStateChanged1(authService, (user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) =>\n            updateProfileEx(user, {\n              displayName: user.displayName,\n            }),\n        });\n      }else{\n          setUserObj(null);\n      }\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfileEx: (args) =>\n        updateProfileEx(user, {\n          displayName: user.displayName,\n        }),\n    });\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}